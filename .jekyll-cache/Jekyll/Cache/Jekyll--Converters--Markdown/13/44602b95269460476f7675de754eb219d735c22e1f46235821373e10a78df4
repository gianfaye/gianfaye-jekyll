I"a 
<p>In preparation to the <a href="/blog/openness-night-24-hour-hackathon/">Openness Night Hackathon this coming weekend</a>, today, I worked around <strong>Node.js app deployment on Heroku</strong>. I’ll be posting the procedures, challenges, and problems I encountered along the way by which could help anyone reading this who’s also venturing this topic. Please mind that this is not an actual tutorial but I will provide links.</p>

<h2 id="so-why-deployment-first">So, why deployment first?</h2>

<p>Yesterday, I gathered resources, tutorials and helpful articles and posted them on a Trello board (which I’ll be sharing later on) and decided that I should first figure out how we will be deploying our app on the hackathon event.</p>

<p>If you would scale up the experiences I have with development, you would say I’m the front-end geek. But on this hackathon I signed up as the developer as they require one developer and one designer on their mechanics. Not to be confused with the roles of both, but I am the mastermind of the project so technically I’ll be dealing with most of the backend stuff this time.</p>

<p>Since I can easily work around UX/UI, visual design, and CSS, I first tried to figure out how we would actually deploy our app online.</p>

<h2 id="why-heroku">Why Heroku?</h2>

<p>I have frequently encountered <a href="https://www.heroku.com/">Heroku</a> before and I learned it can host Node.js apps and supports <a href="https://devcenter.heroku.com/categories/language-support">many other languages</a> as well. I also have learned about <a href="https://www.nodejitsu.com/">Nodejitsu</a> along the way but I decided to first go with Heroku this time. Heroku also uses Git for deploying apps and I have my initial app mirrored on my GitHub account as well.</p>

<h6 id="list-of-related-articles">List of related articles:</h6>
<ul>
  <li><a href="http://www.codebudo.com/2012/05/nodejitsu-vs-heroku-for-node-js-hosting/">Nodejitsu vs. Heroku for node.js Hosting</a></li>
  <li><a href="http://adamnengland.wordpress.com/2013/07/08/heroku-vs-nodejitsu-vs-appfog/">Heroku vs Nodejitsu vs Appfog</a></li>
</ul>

<h2 id="nodejs">Node.js</h2>
<p>I have installed <a href="http://nodejs.org/">Node.js</a> and downloaded <a href="https://npmjs.org/">npm</a> long ago but didn’t actually had the right goal to use it. I started the <a href="https://trello.com/c/hqmSl9iK/5-real-time-web-with-node-js">Node.js course on CodeSchool</a> last month but wasn’t able to finish before my subscription expired, although I have downloaded the pdf for the whole course which pretty sums everything you need to know to start a Node.js project. I’ll be providing the pdf later. Otherwise, the course familiarized me quite a bit with the syntax and code structure of Node.js.</p>

<p>So before deploying to Heroku, I first started to run the app locally. The first, and quite embarrasing thing is - I opened the <a href="http://nodejs.org/api/repl.html">REPL</a> and typed the command in there. So when I happen to check the error online, <a href="https://github.com/joyent/node/issues/2931">I got this</a>: <code>LOL n00b! SYNTAX ERROR! TAKE THAT! HAHA!</code></p>

<p><strong>Lesson learned: don’t type <code>npm</code> commands on the REPL.</strong></p>

<p>Moving on, I know you could be laughing your ass right now but let me move on plz. :)</p>

<h2 id="express-socketio-ejs">Express, Socket.io, Ejs</h2>

<p>I followed this article: <a href="http://robdodson.me/blog/2012/06/04/deploying-your-first-node-dot-js-and-socket-dot-io-app-to-heroku/">Deploying Your First Node.js and Socket.io App to Heroku</a>. So moving on with the REPL mistake, I installed <a href="http://expressjs.com/">Express</a> on my Git Bash. :) Express is basically a web app framework for Node.js. Then after I created my project, I installed <a href="http://socket.io/">Socket.io</a> which I still have little idea of its functionality but I’m gonna go with it.</p>

<p><strong>Why so many <code>node_modules</code> folders!?</strong></p>

<p>One of the initial challenges I encountered is understanding the file directory structure of Node.js and its modules. If you have installed Express and Socket.io for the first time you would notice <code>node_modules</code> folders on different hierarchies. The OCD in me grunches out and wanted to know if this is actually part of the structure or just duplicates. Turns out, node will automatically detect <code>node_modules</code> directories inside the project and will look for the modules in there. So technically, you should not rename it.</p>

<p><strong>The role of <code>package.json</code></strong></p>

<p>Contextually, <code>package.json</code> is like the <code>/_config.yml</code> on your Jekyll site. It contains the information for your Node.js project and it is very important to know that dependencies and their proper versions should be properly encoded to avoid conflicts.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
    "name": "project-name",
    "version": "0.0.1",
    "private": true,
    "dependencies": {
      "express": "3.1.x",
      "ejs": "~0.7.1",
      "socket.io": "~0.9.6"
  },
  "engines": {
    "node": "0.6.x"
  }
}
</code></pre></div></div>

<h2 id="conflicts-with-versions">Conflicts with versions</h2>

<p>So while following the same article above by Rob Dodson, I encountered problems with the version of Express I installed with the sample <code>app.js</code> he posted.</p>

<p>Turns out that my version is Express 3 and his sample (considering his post is old) is for an older version of Express. See: <a href="https://github.com/visionmedia/express/wiki/Migrating-from-2.x-to-3.x">Migrating from 2.x to 3.x - visionmedia/express Wiki</a>.</p>

<p><strong>Here are some of the examples of the deprecated code:</strong></p>

<p>From line 2 of <code>app.js</code>:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	app = express.createServer(express.logger())
</code></pre></div></div>

<p>» <code>express.createServer()</code> should be <code>express()</code> on Express 3.</p>

<p>On line 37, <code>app.address().port</code> should just be simply <code>port</code></p>

<p><strong>There’s also compatibility issues with Socket.io:</strong></p>

<p>From <code>io = require('socket.io').listen(app)</code> to <code>io = require('socket.io').listen(server)</code>.</p>

<p>**Aaaand with EJS: **</p>

<p><a href="http://embeddedjs.com/">EJS</a>, a JavaScript templating library, also got some compatibility issues with Express 3. (Damn, Express 3.) <a href="http://stackoverflow.com/questions/12616694/layouts-in-express-3-and-ejs">Layouts has been removed in Express 3</a>. Good thing I found a workaround and used <code>ejs-locals</code> which you can get [here](<a href="https://github.com/RandomEtc/ejs-locals">ejs-locals</a>.</p>

<p>And so after making all the modules be friendly with each other, I got to run the app locally. Now we can move on with Heroku. <strong>YAY!</strong></p>

<h2 id="heroku">Heroku</h2>

<p>There’s not much problems I encountered with deploying the app on Heroku. <a href="https://devcenter.heroku.com/articles/getting-started-with-nodejs">Getting Started with Node.js on Heroku</a> pretty sums up the entire thing. Although for hours I can’t get the app working properly online and was always showing an Application Error page. Turns out I just need to remove <code>server.listen(3000)</code>. <em>/facepalm/</em></p>

<p>The file structure of my project looks a bit like this:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>project
|_ node_modules
	|_ .bin
	|_ ejs-locals
	|_ ejs
	|_ express
	|_ socket.io
|_ views
	|_ boilerplate.ejs
	|_ index.ejs
|_ Procfile
|_ app.js
|_ package.json
</code></pre></div></div>

<p>Tomorrow evening we’ll be attending the <a href="https://opennessnighthackbootcamp.eventbrite.com/">Dev Boot Camp</a> for Windows 8 Application development. I’m still typing this post and I didn’t realized it’s already morning. And oh, my partner just got her Windows 8 installed:</p>

<p><img src="/assets/images/posts/2013/windows-8-screenshot.jpg" alt="Windows 8" /></p>

<p>Time to party.</p>
:ET